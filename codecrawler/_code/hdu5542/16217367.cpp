#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
const int Z=1e9+7;
const int N=1005;
int casenum,casei;
int n,m;
int a[N];
int f[N][N];
int d[N][N];int top;
#include<map>
map<int,int>mop;
map<int,int>::iterator it;
inline void add(int &x,int y)
{
    x+=y;
    if(x>=Z)x-=Z;
}
int cnt(int p,int x)
{
    long long tmp=0;
    for(;x;x-=x&-x)tmp+=d[p][x];
    return tmp%Z;
}
void add(int p,int x,int v)
{
    for(;x<=top;x+=x&-x)add(d[p][x],v);
}
int main()
{
    scanf("%d",&casenum);
    for(casei=1;casei<=casenum;casei++)
    {
        scanf("%d%d",&n,&m);
        mop.clear();
        for(int i=1;i<=n;i++)scanf("%d",&a[i]),mop[a[i]]=0;
        top=0;for(it=mop.begin();it!=mop.end();it++)it->second=++top;
        for(int i=1;i<=n;i++)a[i]=mop[a[i]];
        
        memset(d,0,(m+1)*N*4);
        memset(f,0,(n+1)*N*4);
        int ans=0;
        for(int i=1;i<=n;i++)
        {
            int top=min(i,m);
            for(int j=1;j<=top;j++)
            {
                if(j==1)f[i][j]=1;
                else add(f[i][j],cnt(j-1,a[i]-1));
                add(j,a[i],f[i][j]);
            }
            add(ans,f[i][m]);
        }
        printf("Case #%d: %d\n",casei,ans);
    }
    return 0;
}
/*
ãé¢æã
ç»ä½ nï¼1e3ï¼ä¸ªæ°ï¼æ¯ä¸ªæ°é½å¨[1,1e9]èå´ã
ç¶åè®©ä½ ä¿ææ°çé¡ºåºä¸åï¼éåºé¿åº¦æ°å¥½ä¸ºmï¼1<=m<=nï¼çåè°ä¸åå­åºåã
é®ä½ æå¤å°ç§éæ©æ¹æ¡

ãç±»åã
DP
æé¿ä¸åå­åºå
ç¦»æ£å+æ ç¶æ°ç»

ãåæã
è¿éé¢ä¸å¼å§ææ¯ä»¥O(nlogn)æé¿ä¸åå­åºåçæå¥æ³åãä½æ¯å¾é¾å®ç°ãå¡äºä¸æ®µæ¶é´ã

åæ¥ç»ånåªæ1000çæåµï¼æä»¬åºè¯¥è®¾æ³å°O(n^2)çåæ³ã
é¢ç®æ¶åå°éæ©ï¼æä»¬ä¸å¦¨åå½å°ä¸ä¸ªå¾ç»å¸çDPæ¨¡åââ
ç¨f[i][j]è¡¨ç¤ºåiä¸ªæ°ä¸­éæ©äºjä¸ªæ°çä¸åå­åºåçæ¹æ¡æ°ã
è¿ä¸ªç¶æçä¸ä¸ªå¥½å¤æ¯ï¼å®æè¿ä¸ªä¸åèªåºåçé¿åº¦ä¹åå«äºï¼å°±æ¯jã
è¿æä¸ä¸ªæ§è´¨ï¼æä»¬å¦ä½æ¥çä¸ä¸ªæ°è½å¦æ¥å¨åé¢çåºååï¼å¶å®åªè¦ç¥éä¹åä¸åå­åºåçæåä¸ä½å°±å¯ä»¥è¿è¡å¤å®äºã
é´äºè¿ä¸ªï¼æä»¬ä¿®æ¹ä¸f[i][j]çå«ä¹ââ
f[i][j]è¡¨ç¤ºåiä¸ªæ°ä¸­éæ©äºjä¸ªæ°ï¼ä¸æåä¸ä¸ªæ°ä¸¥æ ¼ä¸ºa[i]æ¶çä¸åå­åºåæ¹æ¡æ°ã
è¿æ ·å°±æç¶æè½¬ç§»f[i][j]=âf[p][j-1],pâ[1,i-1]ä¸a[p]<a[i]

å ä¸ºæä»¬å¯ä»¥ä¸¥æ ¼ä¿æiçååºï¼æä»¥å°±åªéè¦æ¾å°ææé¿åº¦ä¸ºj-1ä¸å°¾èç¹a[p]<a[i]çå­åºåä¸ªæ°å³å¯ã
ä¸å ä¸ºfor i for jå·²ç»ä½¿å¾å¤æåº¦åæO(n^2)ï¼æä»¥è¿ä¸ªæä½è¦å¨log(n)çº§å«çæ¶é´åå®æã
èä¸è¿ä¸ªæä½è®¾è®¡å°å¨ææä½ï¼äºæ¯æä»¬æ³å°æ ç¶æ°ç»ï¼çº¿æ®µæ ä¹å¯ï¼ã

è¿æ ·è¿éé¢çåæ³å°±å¾æ¸æ°äºã
1ï¼ç¦»æ£å
2ï¼ç¶æè½¬ç§»
for(int i=1;i<=n;i++)
{
    //å¶å®è¿ä¸ªjçé¡ºåºå¹¶ä¸éè¦ï¼å ä¸ºæä»¬æ´æ°çå°¾èç¹é¿åº¦ä¸ºa[i]ï¼èªå·±æ¯æ æ³å»¶ä¼¸èæ¥ç
    for(int j=top;j>=1;j--)
    {
        if(j==1)f[i][j]=1;
        else add(f[i][j],cnt(j-1,a[i]-1));
        add(j,a[i],f[i][j]);
    }
    add(ans,f[i][m]);
}

ãæ¶é´å¤æåº¦&&ä¼åã
O(n^2 logn)
åæ¨¡è¿æ¯å¾æ¶èæ¶é´ç233

*/