/*
æ£°æ¨»å°éæ°«ç«´å¦«å«æ¹éå©ç²éå±¼ç² éå­ç²¨ééèéæ§åKæ¶îæºé£ã¤æ±éå±¾ç°é¢ã¨ç¹Kæ¶îæºé£ã¤æ±é¬å¶å·»éµï¿½éå¤æ®ç¼æ¶å£éï¿½çæ æ®éå¨ï¿½çæ°
éåç½éæ­p[i][j]çã§ãçµéç°¬æµ î¯ç¼æ¶å£æ¶çç´ç¼æ¶å£é¨å«çéæ¯ç´éç·æ¶îæºé£ã¤æ±éµï¿½éï¿½çä½ºæ®éå¨ï¿½çæ°éï¿½
      è¤°æ=0éæ°ãç»çææµåç«´æ¶îæºé£ã¤æ±æ¶å¬ªå¹éå²äº¶éåç¬ç¼æ¶å£éåº¡å¼µé¥ç²åiç¼æ¶å£æµåï¿½åå§¸é¬ä½½æµç»ç»æç»å¬¬è¢«æµ¼è°åéï¿½
  æ¿¡åçéï¿½ç¼å ¢æ®éèµï¿½ä½·èæµ î¯æ¶çç´ç¼æ¶å£é¨å¬ç²æ¶îæ¹j(j>0)æ¶îæºé£ã¤æ±éå²åæ¶å ç¬éîåéå¤åé¨å¬æºé£ã¤æ±réé¢ç°¡æ©æ¬ï¼éææéå £çªéæ¿åé¨å¬ç²æ¶îå¹
  é¥ç±è´é­ï½ç±é¨å®ç½éå±¼ç«´ç¹æ°«ç´°å§£ææ¶î æ®éæªç«´æ¶îåæç·éåº¤çªæ¶å·é©ç¨¿æé¨å®ç¾å¯°å«åé¥ç²åiéå±½åéºã§æ½çºæç é¨å®ç¾å¯°å®î¦å®¸ï¿½(æ¾¶æ°«ç°¡æ¶ï¿½éî¯é¥ç²å¹é¨å®ç«)
  æ©æ¬ç±é¨å®ç½éå±½î§éæ»æ¸¶éåºäºiæ¶çç´ç¼æ¶å£é¨å¬ç²æ¶îçéå¤æºé£ã¤æ±éå²åæ¶å å½§éîåéîæ·³æ¶ï¿½æ¶îæºé£ã¤æ±æ¶å¬ªå¹é¬å¶å·»ç¹å±½æéå¶æ´éï¿½
*/
#include<stdio.h>
#include<string.h>
#include<iostream>
using namespace std;

const __int64 maxn=11000;
const __int64 maxm=21000;
struct edge
{
    __int64 u,v,w,next;
}e[maxm];
__int64 edgeNum,first[maxn],dp[maxn][15];

void Addedge(__int64 u,__int64 v,__int64 w)
{
    e[edgeNum].u=u,e[edgeNum].v=v,e[edgeNum].w=w,e[edgeNum].next=first[u],first[u]=edgeNum++;
    e[edgeNum].u=v,e[edgeNum].v=u,e[edgeNum].w=w,e[edgeNum].next=first[v],first[v]=edgeNum++;
}

void DFS(__int64 t,__int64 p)
{
    __int64 ii,i,j,k;
    for(k=first[t];k!=-1;k=e[k].next)
    {
        i=e[k].v;
        if(i==p) continue;
        DFS(i,t);
    }
   /* ç§å¬ªåµéï¿½0éè®¹ç´éîç¬é¢ã§î¸éè·ºçç¼æ¶å£æµï¿½
   //first[t]=-1éæ°î©éåº¢ç²æ¶îå½§éå¤ç«´æ¶îç²¨éï¿½
    if(first[t]==-1||(e[first[t]].next==-1&&p!=-1))//éè·ºçç¼æ¶å£,å¨ã¦å°æ¶ï¿½ç¹æ°³î¦é¶å©ç´ç¼æ¶å£éºææ«éï¿½
    {
        for(i=0;i<=10;i++)
            dp[t][i]=0;
        return;
    }*/
    for(k=first[t];k!=-1;k=e[k].next)
    {
        i=e[k].v;
        if(i==p) continue;
        for(j=10;j>=0;j--)//çºï¿½01é³å±½å¯ç»«è®³æéå±¾æéæç¬é³è¥å´²éï¿½
        {//å§ãæ¤é¨å£p[i][j]çã§ãæµ î¯æ¶çç´ç¼æ¶å£é¨å«çéæèéå¶æ½°é¨å«çéï¿½(éå®å«­æ©æ¬ï¼çæ­ç²)é¬è¯²åé°å¶ç°¡jæ¶îæºé£ã¤æ±é¨å¬æ¸¶çææ½éçæ°
            /*if(!dp[t][j])//ç»î¿ç«´å¦«éçéï¿½
            {
                if(j) 
                {//éï¿½æ¾¶æ°­æjæ¶îæ¹ªçã¥çéæèéå±¼ç¬æ¶ï¿½ç¹æ°³î¦éã©å´éæîçæ­ç²æ¶ï¿½(éå¤ç«´æµæ¶æºé£ã¤æ±çåä» é¦ã¨ç¹æ¶îç²¨ééç¬)éåç¶éæµç«´æ¶îç¬éæåç¹æ°«ç¬éîæ¸¶æ¿çæ®
                    for(ii=1;ii<=j;ii++)
                        if(dp[t][j]==0||dp[t][j]>dp[i][ii]+ii*e[k].w)
                            dp[t][j]=dp[i][ii]+ii*e[k].w;
                }
                else dp[t][0]=dp[i][0]+2*e[k].w;//éå¥ç¬æ¶ï¿½æ¶îå¼µé«ï¿½é¥ç´æ½µ
                continue;
            }
            else//éï¹å¯éå²å«¢çã¥çéææ0æ¶îæºé£ã¤æ±*///æ©æ¬ç«´å¨å¸ç¯éîäºæ¶å¶î¦
                dp[t][j]+=dp[i][0]+2*e[k].w;
            for(ii=1;ii<=j;ii++)//çã¥çéææ[1,j]æ¶îæºé£ã¤æ±
            {
                if(dp[t][j]>dp[t][j-ii]+dp[i][ii]+ii*e[k].w)
                    dp[t][j]=dp[t][j-ii]+dp[i][ii]+ii*e[k].w;
            }
        }
    }
}
int main()
{
    __int64 n,s,k,i,u,v,w;
    while(scanf("%I64d%I64d%I64d",&n,&s,&k)!=EOF)
    {
        memset(first,-1,sizeof(first));
        for(edgeNum=0,i=1;i<n;i++)
        {
            scanf("%I64d%I64d%I64d",&u,&v,&w);
            Addedge(u,v,w);
        }
        memset(dp,0,sizeof(dp));
        DFS(s,-1);
        printf("%I64d\n",dp[s][k]);
    }
    return 0;
}