#include<stdio.h> 
#include<string.h>
#include<algorithm>
using namespace std;
#define MS(x,y) memset(x,y,sizeof(x))
#define MC(x,y) memcpy(x,y,sizeof(x))
typedef long long LL;
const int N=1015,M=4015;
int casenum,casei;
int n,m;
struct A
{
    int l,v,h;
    bool operator < (const A& b)const {return l<b.l;}
}a[N];
int d[N][M];
LL f[M];
template <class T1,class T2>inline void gmax(T1 &a,T2 b){if(b>a)a=b;}
int main()
{
    scanf("%d",&casenum);
    for(casei=1;casei<=casenum;casei++)
    {
        LL ans=0;
        scanf("%d%d",&n,&m);m<<=1;
        for(int i=1;i<=n;i++)
        {
            scanf("%d%d",&a[i].l,&a[i].v);
            a[i].h=a[i].l;
            a[i].l<<=1;
            if(a[i].v>ans)ans=a[i].v;
        }
        sort(a+1,a+n+1);
        while(n>=1&&a[n].l>=m)--n;//ä¼åï¼é¿åº¦æ¯ä¸åè¿é¿çç­æï¼å®ä»¬è¯å®åªè½æ¾ä¸ä¸ª

        MS(d,0);
        for(int i=n;i>=1;i--)
        {
            MC(d[i],d[i+1]);
            gmax(d[i][a[i].h],a[i].v);
            for(int j=i+1;j<=n;j++)
            {
                int len=a[i].h+a[j].h;
                if(len>m)break;
                gmax(d[i][len],a[i].v+a[j].v);
            }

            //æä»¬åæ«æä¸éï¼ç»´æ¤åè°æ§ï¼ä½¿å¾d[i][j]è¡¨ç¤ºç¨iåä»¥ä¸çæ¨æ£æ¾å¨ä¸¤è¾¹ï¼å æ®çç©ºé´æå¤§ä¸ºjæ¡ä»¶ä¸çæå¤§ä»·å¼
            for(int j=1;j<=m;j++)gmax(d[i][j],d[i][j-1]);
        }
        gmax(ans,d[1][m]);

        MS(f,0);
        for(int i=1;i<=n;i++)
        {
            for(int j=m;j>=a[i].l;j--)
            {
                gmax(f[j],f[j-a[i].l]+a[i].v);
                gmax(ans,f[j]+d[i+1][m-j]);
            }
        }
        printf("Case #%d: %lld\n",casei,ans);
    }
    return 0;
}
/*
ãtrick&&åæ§½ã
è¿é¢çé¢ææäºæå¥½ä¹ï¼æ¬æ¥æ¯1ä¸ªå¤å°æ¶å°±è½ACçï¼ç»æè¢«ææå°äº4ä¸ªå¤å°æ¶æå®æACQwQ
çæ¥è¯»é¢çæ¶åä¸å®è¦ç¡®ä¿ä¸é¢æãæäºå®å¨ä¸æ¸æ¥çå°æ¹åªææ¯æä¸¾ä¸é¢æä¹æ¯å¯ä»¥çã
è¿é¢ä¸­æä¸å¥ââNo gold segment was allowed to be overlapped.
å¯¹äºå³é®æ§çè¯ä¸è¦å¿½ç¥ã
å¯¹äºå³é®æ§çåè¯ä¸è¦èè¡¥ã
No gold segment was allowed to be overlapped.
overlapè¢«æçè§£æäºæº¢åºï¼å°±æ¯å®¹å¨æ¯ä»¥æ´æ°ä¸ºåä½åä¸æ®µæ®µï¼æ¾è¿å»çæ¨æ£ä¹è¦æ°å¥½æ¯å¡æä¸æ®µæ®µã
ç¶èäºå®ä¸overlapçæææ¯éå ãäºæ¯å°±å¯ä»¥æ
input
2 3
3 1
3 1
output
2
çå¯¹åºè¾å¥è¾åºäºã
äºå®ä¸ï¼å¦æææä¸¾é¢æï¼ä¹ä¸ä¼å¡è¿ä¹ä¹QwQ

ãé¢æã
ç»ä½ ä¸ä¸ªé¿åº¦ä¸ºmï¼[1,2000]ï¼çé¿æ¡ç¶å®¹å¨ã
ç¶åæä»¬ænï¼[1,1000]ï¼æ®µæ¨æ£ã
ç¬¬iæ®µæ¨æ£æä¸ä¸ªé¿åº¦a[i].låä»·å¼a[i].vã
æä»¬å¸ææå°½å¯è½å¤§ä»·å¼çæ¨æ£æ¾å°å®¹å¨ä¸­ï¼ä½¿å¾æææ¨æ£çéå¿é½å¨å®¹å¨å
è¦æ±æ¨æ£ä¸è½éå ã

ãç±»åã
DP+è´ªå¿

ãåæã
ä¸æ¡æ¨æ£çè¯ï¼ä¸ç®¡å®æå¤é¿ï¼æ»ææ¹æ¡ä½¿å¾éå¿è½å¨å®¹å¨èå´åï¼ä¸å®æ¯å¯ä»¥çã
ç¶èï¼å¦ææ¯å¤æ¡æ¨æ£å¢ï¼

å¯¹äºæ¢æéæ©åæé¡ºåºçDPï¼æä»¬å¯ä»¥åç®åé®é¢ã
æä»¬å¯ä»¥ååè®¾ï¼åè®¾æä»¬å·²ç»å¾å°äºæåéæ©çæ¨æ£çéåæ¯ä»ä¹ï¼ç°å¨åªæ¯å¯¹è¿äºæ¨æ£å³å®æ¾ç½®æ¹æ¡ã
é£ä¹ï¼æä¸¤ç§å¯è½ââ
1ï¼æ²¡ææ¨æ£æ¬å¨å¤é¢ï¼
2ï¼æ1æ ¹æè2æ ¹æ¨æ£æ¬å¨å¤é¢ã
å¯¹äºæåµ1ï¼æä»¬å¯ä»¥ç´æ¥ç¨ä¼ ç»ç"f[åiä¸ªæ¨æ£][é¿åº¦ä¸ºj]"è¿æ ·çDPç®å¾ç»æã
å¯¹äºæåµ2ï¼æ¾å¨å¤é¢çæ¨æ£æ¯ä»ä¹å¢ï¼
æä»¬åç°ï¼å¦æç®åæ¯ç­çæ¨æ£æ¬å¨å¤é¢ï¼é¿çæ¨æ£å¨éé¢ãæ¹æ¡åæ³ã
åè®¾é¿çæ¨æ£é¿åº¦æ¯llï¼ç­çæ¨æ£é¿åº¦æ¯lï¼å¦æäº¤æ¢ä½ç½®ï¼
1,æä»¬ä¼å¤ç©ºé²(ll-l)çåé¨ç©ºé´ï¼
2,æä»¬ä¼å¤éè¦(ll-l)/2çç©ºé´æ¬æ¾è¿ä¸ªæ¨æ£ã
æ¾ç¶å¤ç©ºé²åºçç©ºé´æ¯å¤éè¦çç©ºé´è¦å¤§ï¼è¿ä¸ªæ¹æ¡ä¹ä¸å®æ¯åæ³çã
äºæ¯æä»¬å°±è¿æ ·å¾å°äºä¸ä¸ªè´ªå¿ç»è®ºââ
å¯¹äºä¸ä¸ªåæ³çæ¹æ¡ï¼ä¸å®æ¯éæ©æé¿çæ¨æ£æ¬å¨å¤é¢ã

äºæ¯ï¼æä»¬åææææ¨æ£æç§è¾¹ä»å¤§å°å°åæåºï¼
ç¶åç¨d[i][j]æ±åºââç¨ç¼å·å¨iæiä»¥ä¸çæ¨æ£ï¼æ¬æå¨ä¸¤è¾¹ï¼å æ®çç©ºé´ä¸ºæå¤§ä¸ºjæ¡ä»¶ä¸çæå¤§ä»·å¼ã
å ä¸ºè¿éå¯è½æ¯1æ ¹æ2æ ¹æ¨æ£æº¢åºãæä»¥æä»¬éè¦ç¨ä¸ä¸ªO(n^2)å¤æåº¦ä¸æä¸¾çDPå°±è½ç»´æ¤d[][]

ç¶åæä»¬å¨åå³äºæåµ1çDPçæ¶åï¼æä»¬è½æ±åºç¨ï¼
æ¾å¨ä¸­é´çæ¨æ£é½æ¥ä¹åiä¸ªæ¨æ£ä¸­ï¼å æ®çé¿åº¦ä¸ºjæ¡ä»¶ä¸çæå¤§ä»·å¼ï¼è®°ä¸ºf[i][j]
ç¶èï¼æä»¬åé¢å¤ç®ä¸æ¾å¨ä¸¤è¾¹çæ¨æ£ï¼è¿æå¤2æ ¹æ¬ææ¨æ£è¦æ±é½æ¯æ¥èªäºi+1~nçæ¨æ£ä¸­ã
äºæ¯å¯ä»¥ç¨f[i][j]+d[i+1][m-j]æ´æ°ç­æ¡ã

è¿éçæåä¸ä¸ªé®é¢æ¯ï¼
æä»¬å¯è½éå¿æ¯è½å¨éæ´ç¹ä½ç½®ï¼å¯¹äºè¿ä¸ªæåµï¼æä»¬è¦æä¹åå¢ï¼
å¯¹äºææä¹çå³ç­ï¼æ¢æ¯éå¿ä¸è½å¨éæ´ç¹ä½ç½®ï¼é£ä¹è¯å®æ¯è½å¨0.5ä½ç½®ã
æä»¥æä»¬æåå®¹å¨é¿åº¦*=2ï¼
ç¶åå¯¹äºåé¨ææ¾çDPï¼éè¿åé¿åº¦*2å±å¼ï¼
å¯¹äºå¤é¨çDPï¼åç¨åé¿åº¦å±å¼ï¼å ä¸ºè¦æä¸ååµå¨åé¨ï¼ã
è¿æ ·å°±é¿åçå°æ°çæåµï¼ä¿è¯äºé¢ç®è½å¤é¡ºå©AC~~

ãæ¶é´å¤æåº¦&&ä¼åã
O(n^2)

ãæ°æ®ã
input
2 3
3 1
3 1

output
2
*/