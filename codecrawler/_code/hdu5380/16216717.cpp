/**
hdu5380 è´ªå¿+åç«¯éå
é¢ç®å¤§æï¼ä¸ä¸ªäººä»0èµ°å°nç¥éaiä¸ºièç¹å°0çè·ç¦»ï¼æ²¡è¡èµ°åä½è·ç¦»è¦æ¶èä¸é¢ç³ï¼å¨ææèç¹ä¸­å¯ä»¥è¿è¡ä¹°ç³ååç³ä»·æ ¼ä¸ºsell[i]åbuy[i],é®èµ°å°nèç¹è¯è´¹æå°ä¸ºå¤å°
è§£é¢æè·¯ï¼ä»0å¼å§ï¼æ¯æ¬¡é½æå½åæºå¸¦çç³çæ°éä¸ºCï¼å°ä¸ä¸ä¸ªèç¹ï¼å¦æåçä»·æ ¼é«çè¯å°±æå½åå£è¢éå©çä»·é±è¾ä½ä¹°çæ¢æå½åç¹åçä»·æ ¼ï¼å ä¸ºå½åå©çç³æ¯å¤ä½ç
           èµ°å°æåæ¯è¦è¢«éæçï¼æä»¥æä»¬æ­¤ä¸¾æéçä»·æ ¼æ¬é«äºï¼ï¼ç¶åæåä¸ä¸ªèç¹å°å½åèç¹è·¯ä¸æ¶èçç³å¨ç°å¨ä¹°åæ¥ï¼ä¿ææºå¸¦ç³ä¸ºCï¼èµ°å°nåæææå©çç³éæ
           ææ³æç¹é¾çè§£ï¼éè¦å¥½å¥½æ³ä¸æ³ï¼è´´ä¸æ ç¨
*/
#include <iostream>
#include <cstdio>
#include <string.h>
#include <algorithm>
using namespace std;
typedef long long LL;
const int MAXN=200000+1000;
struct que
{
    int val,cnt;
} Q[MAXN*2];
int l,r,tot;
LL ans;
void Max(int v)
{
    int num=0;
    while(l<=r&&Q[l].val<v)
    {
        num+=Q[l].cnt;
        l++;
    }
    if(num)
    {
        --l;
        Q[l].cnt=num;
        Q[l].val=v;
    }
}
void Min(int v)
{
    while(l<=r&&Q[r].val>v)
    {
        ans-=1LL*Q[r].val*Q[r].cnt;
        tot+=Q[r].cnt;
        --r;
    }
}
void Del(int v)
{
    while(v)
    {
        int t=min(Q[l].cnt,v);
        Q[l].cnt-=t;
        v-=t;
        if(Q[l].cnt==0)++l;
    }
}
int A[MAXN],n,c,sell[MAXN],buy[MAXN];
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d",&n,&c);
        A[0]=0;
        for(int i=1; i<=n; i++)scanf("%d",&A[i]);
        for(int i=0; i<=n; i++)scanf("%d%d",&buy[i],&sell[i]);
        l=r=n;
        --r;
        ans=0;
        for(int i=0; i<n; i++)
        {
            //å°ä¹°å¥ä»·å°äºååºä»·çåå¹¶
            Max(sell[i]);
            //è¡¥åä½¿å¾æ»¡æ²¹
            tot=(i==0)?c:A[i]-A[i-1];
            //å°ä¹°å¥ä»·å¤§äºå½åä¹°å¥ä»·çæ²¹é½éäºï¼æ´æ°ç­æ¡å¹¶è®¡ç®éè¦è¡¥åçæ²¹tot
            Min(buy[i]);
            //å°ä¹°å¥çæ²¹æ°éååä»·å¥éå
            Q[++r].val=buy[i];
            Q[r].cnt=tot;
            ans+=1LL*buy[i]*tot;
            //æ¶åä»i...i+1è¿ä¸ªç¹çæ²¹ï¼æä¾¿å®ç
            Del(A[i+1]-A[i]);
        }
        //æ´æ°æåä¸ä¸ªç¹
        Max(sell[n]);
        //æå¤ä½çæ²¹éæ
        for(int i=l; i<=r; i++)ans-=1LL*Q[i].val*Q[i].cnt;
        printf("%I64d\n",ans);
    }
    return 0;
}
